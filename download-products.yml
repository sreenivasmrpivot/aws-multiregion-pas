---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: opsman-product
  type: s3
  source:
    access_key_id: ((aws_access_key))
    bucket: ((pivnet_products_bucket))
    region_name: ((region))
    secret_access_key: ((aws_secret_key))
    regexp: \[ops-manager,(.*)\].*.yml

- name: pas-product
  type: s3
  source:
    access_key_id: ((aws_access_key))
    bucket: ((pivnet_products_bucket))
    region_name: ((region))
    secret_access_key: ((aws_secret_key))
    regexp: \[elastic-runtime,(.*)\]cf-.*.pivotal

- name: pas-stemcell
  type: s3
  source:
    access_key_id: ((aws_access_key))
    bucket: ((pivnet_products_bucket))
    region_name: ((region))
    secret_access_key: ((aws_secret_key))
    regexp: pas-stemcell/\[stemcells-ubuntu-xenial,(.*)\]bosh-stemcell-.*-azure.*\.tgz

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: 3\.(.*)
    sort_by: semver

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((aws_access_key))
    bucket: ((pivnet_products_bucket))
    region_name: ((region))
    secret_access_key: ((aws_secret_key))
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((aws_access_key))
    bucket: ((pivnet_products_bucket))
    region_name: ((region))
    secret_access_key: ((aws_secret_key))
    regexp: platform-automation-image-(.*).tgz

- name: config
  type: git
  source:
    private_key: ((configuration.private_key))
    uri: ((configuration-uri))
    branch: master
    submodules: all
    depth: 1

- name: daily
  type: time
  source:
    interval: 24h

credhub-interpolate: &credhub-interpolate
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: ((credhub-server))
    CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
    PREFIX: '/concourse/main'
    INTERPOLATION_PATHS: "/environment/sandbox/download-configs"
  input_mapping:
    files: config
  output_mapping:
    interpolated-files: config

jobs:
- name: fetch-opsman
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: environments/sandbox/download-configs/opsman.yml
  - aggregate:
    - put: opsman-product
      params:
        file: downloaded-product/*

- name: fetch-pas
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: download-pas-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: environments/sandbox/download-configs/pas.yml
    output_mapping: {downloaded-stemcell: pas-stemcell}
  - aggregate:
    - put: pas-product
      params:
        file: downloaded-product/*.pivotal
    - put: pas-stemcell
      params:
        file: pas-stemcell/*.tgz

- name: fetch-platform-automation
  plan:
  - get: platform-automation-pivnet
    trigger: true
  - aggregate:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz
